name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - master

env:
  DEFAULT_CRATE_NAME: wit_pack
  RUST_BACKTRACE: 1
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  MDBOOK_VERSION: v0.4.21

jobs:
  check:
    name: Compile and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Give GitHub Actions access to wasmerio/pirita
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PIRITA_REPO_DEPLOY_KEY }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "1.64.0" # Required for [workspace.package]
          override: true
          target: wasm32-unknown-unknown
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Clear the Cache
        run: git clean -x -f -d
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - run: yarn --version
      - name: Type Checking
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --workspace --verbose --locked
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --verbose --locked
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --verbose --locked
      - name: Time Reporter
        uses: Michael-F-Bryan/workflow-timer@v0.1.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  lints:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Give GitHub Actions access to wasmerio/pirita
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PIRITA_REPO_DEPLOY_KEY }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --verbose

  api-docs:
    name: Publish API Docs to GitHub Pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Give GitHub Actions access to wasmerio/pirita
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.PIRITA_REPO_DEPLOY_KEY }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install mdbook
        run: |
          mkdir bin
          curl -sSL "https://github.com/rust-lang/mdBook/releases/download/${{ env.MDBOOK_VERSION }}/mdbook-${{ env.MDBOOK_VERSION }}-x86_64-unknown-linux-gnu.tar.gz" | tar -xz --directory=bin
          echo "PATH=$(pwd)/bin:$PATH" >> $GITHUB_ENV
      - name: User Docs
        run: mdbook build
        working-directory: doc
      - name: API Docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --verbose --locked
      - name: Redirect top-level GitHub Pages
        run: 'echo ''<meta http-equiv="refresh" content="0; url=${{ env.DEFAULT_CRATE_NAME }}/index.html" />'' > target/doc/index.html'
        shell: bash
      - name: Rearrange Docs Directory
        run: |
          mkdir public
          mv target/doc public/api-docs
          mv doc/book/html public/user-docs
      - name: Upload API Docs
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        if: github.ref == 'refs/heads/master'
        with:
          branch: gh-pages
          folder: public
          single-commit: true
